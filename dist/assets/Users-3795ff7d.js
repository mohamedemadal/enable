import{au as i,T as o,av as n,c as r}from"./main-47ecc3e2.js";const c=i("Users",{state:()=>({users:[],roles:[],permissions:[],errors:[],successMsg:"",loading:o(!1),params:n({keyword:"",page:0,size:0,totalPages:0})}),getters:{getUsers:s=>s.users,getUserById:s=>e=>s.users.find(t=>t.id===Number(e)),getRoleById:s=>e=>s.roles.find(t=>t.id===Number(e)),getRoles:s=>s.roles,totalUsers:s=>s.users.length,totalRoles:s=>s.roles.length,getErrors:s=>s.errors,getSuccessMsg:s=>s.successMsg},actions:{async fetchUsers(){try{this.users=[];const s=await r.post("/api/users",this.params);this.users=s.data.users.data,this.params.totalPages=s.data.users.last_page,this.params.page=s.data.users.current_page,this.params.size=s.data.users.per_page}catch(s){console.log(s)}},async fetchRoles(){try{this.roles=[];const s=await r.post("/api/roles");this.roles=s.data.roles.data,this.params.totalPages=s.data.roles.last_page,this.params.page=s.data.roles.current_page,this.params.size=s.data.roles.per_page}catch(s){console.log(s)}},async fetchPermissions(){try{this.permissions=[];const s=await r.post("/api/permissions");this.permissions=s.data.permissions.data}catch(s){console.log(s)}},async addUser(s){if(!this.loading){this.reset(),this.loading=!0;try{this.users=[s,...this.users];const e=await r.post("/api/users/create",s);e.status===201&&(this.successMsg=e.data.message)}catch(e){e.response.status===422&&(this.errors=e.response.data.errors)}finally{this.loading=!1}}},async addRole(s){if(!this.loading){this.reset(),this.loading=!0;try{this.roles=[s,...this.roles];const e=await r.post("/api/roles/create",s);e.status===201&&(this.successMsg=e.data.message)}catch(e){e.response.status===422&&(this.errors=e.response.data.errors)}finally{this.loading=!1}}},async updateUser(s){if(!this.loading){this.reset(),this.loading=!0;try{const e=await r.post(`/api/users/${s.get("user_id")}/edit`,s);e.status===202&&(this.successMsg=e.data.message)}catch(e){console.log(e),e.response.status===422&&(this.errors=e.response.data.errors)}finally{this.loading=!1}}},async updateRole(s){if(!this.loading){this.reset(),this.loading=!0;try{const e=await r.put(`/api/roles/${s.role_id}/edit`,s);e.status===202&&(this.successMsg=e.data.message)}catch(e){e.response.status===422&&(this.errors=e.response.data.errors)}finally{this.loading=!1}}},async fetchUser(s){if(!this.loading){this.reset(),this.loading=!0;try{const e=await r.get(`/api/users/${s}`);e.status===200&&(this.successMsg=e.data.message,this.user=e.data.user)}catch(e){e.response.status===422&&(this.errors=e.response.data.errors)}finally{this.loading=!1}}},async deleteRole(s){this.reset();try{const e=this.roles.findIndex(a=>a.id==s);this.roles.splice(e,1);const t=await r.delete(`/api/roles/${s}/delete`);t.status===200&&(this.successMsg=t.data.message,this.user=t.data.user)}catch(e){this.errors=e.response.data}},async deleteUser(s){this.reset();try{const e=this.roles.findIndex(a=>a.id==s);this.roles.splice(e,1);const t=await r.delete(`/api/users/${s}/delete`);t.status===200&&(this.successMsg=t.data.message,this.user=t.data.user)}catch(e){this.errors=e.response.data}},reset(){this.errors=[],this.successMsg=""}}});export{c as u};
